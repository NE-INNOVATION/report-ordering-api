on: push
name: Node Build, Package & Publish
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set variables
        id: vars
        run: |
          echo ::set-output name=repo::$(echo ${GITHUB_REPOSITORY})
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo ::set-output name=image-name::$(echo docker.pkg.github.com/ne-innovation/report-ordering-api/report-ordering-${GITHUB_REF#refs/heads/})
      #- name: npm install and npm run build
       # run: |
        #  npm i
         # npm run build
      - name: Login to Podman
        id: login
        run:  |
          podman login docker.pkg.github.com -u afu174 -p ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image using Podman
        run: |
          podman build . -t ${{ steps.vars.outputs.image-name }}:${{ github.sha }}
          podman push ${{ steps.vars.outputs.image-name }}:${{ github.sha }}
      - name: Push Image to Github Registry
        run: |
          podman push ${{ steps.vars.outputs.image-name }}:${{ github.sha }}
      - name: Scan Image
        uses: Azure/container-scan@v0
        with:
          image-name: ${{ steps.vars.outputs.image-name }}:${{ github.sha }}
          username: afu174
          password: ${{ github.token }}
          token: ${{ github.token }}
